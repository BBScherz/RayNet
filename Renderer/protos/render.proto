syntax = "proto3";

package render;

// From client to server
message GetJobRequest {
  int64 project_id = 1;
}

message GetCurrentSceneRequest {
  // Empty
}

message GetCurrentSceneResponse {
  bytes scene_data = 1;
}

message Coordinate {
  double x = 1;
  double y = 2;
}

// Represents a rectangle area defined by two coordinates
message Rectangle {
  Coordinate lower_left = 1;
  Coordinate upper_right = 2;
}

// From server to client with job details
message GetJobResponse {
  Rectangle image_coordinates_to_render = 1;
  int64 job_id = 2;
}

message HeartbeatRequest {
  // Empty
}

message HeartbeatResponse {
  bool alive = 1; // Should always be true assuming client is up
}

message ComputationStatistics {
  double time_seconds = 1;
  int64 pixels_rendered = 2;
}

message JobCompleteRequest {
  bytes render_chunk = 1; // Rendered image data
  int64 job_id = 2;
  ComputationStatistics stats = 3;
}

// Acknowledgment from server to client
message JobCompleteResponse {
  bool acknowledged = 1;
}

service RenderService {
  rpc GetJob(GetJobRequest) returns (GetJobResponse);

  rpc Heartbeat(HeartbeatRequest) returns (HeartbeatResponse);

  rpc JobComplete(JobCompleteRequest) returns (JobCompleteResponse);

  rpc GrabScene(GetCurrentSceneRequest) returns (GetCurrentSceneResponse);
}

